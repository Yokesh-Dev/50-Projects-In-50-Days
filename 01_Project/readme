Here's a simplified explanation and summary of the **"Expanding Cards"** project ‚Äî great for beginners learning HTML, CSS, and JavaScript, especially DOM manipulation and styling concepts.

---

## üß† What Does This Project Do?

This project creates a horizontally scrollable gallery of **cards** (or panels). When you click on a card, it **expands** to show a larger view with a **heading**, while the other cards **shrink**.

---

## üìÅ Code Overview

### 1. **HTML: The Structure**

```html
<div class="container">
  <div class="panel active" style="background-image: url('image1.jpg');">
    <h3>Explore the Wallpaper</h3>
  </div>
  <!-- More .panel divs follow -->
</div>
```

* **`<div class="panel">`**: Each panel has a background image and a title (`<h3>`).
* **`.active`**: The initially expanded card.
* **All HTML cards are children of `.container`**.

---

### 2. **CSS: The Styling & Animation**

#### ‚úÖ Key Concepts

* **Flexbox Layout**: `.container` uses `display: flex` to align panels in a row.
* **Responsive Resizing**: Each `.panel` starts at `flex: 0.5` (small size).
* **Expand on Active**: `.panel.active` becomes `flex: 5` (takes more space).
* **Smooth Animation**: Transition effect on `flex` for smooth expanding/shrinking.

#### üîç Interesting Snippets

```css
.panel.active {
    flex: 5;  /* Makes this panel much wider */
}
```

```css
.panel h3 {
    opacity: 0;  /* Hidden by default */
}
.panel.active h3 {
    opacity: 1;  /* Visible only when active */
}
```

#### üì± Responsive Design

```css
@media (max-width: 480px) {
    .panel:nth-of-type(4),
    .panel:nth-of-type(5) {
        display: none;
    }
}
```

* Hides the last two panels on small screens for better layout.

---

### 3. **JavaScript: The Interactivity**

#### üß© Main Concepts Used:

* **DOM selection** with `document.querySelectorAll()`
* **Event listeners** to react to clicks
* **Class manipulation** with `classList.add()` / `classList.remove()`

#### üîß Code Breakdown:

```js
const panels = document.querySelectorAll(".panel");

panels.forEach((panel) => {
  panel.addEventListener("click", () => {
    removeActiveClasses();           // Step 1: Remove 'active' from all
    panel.classList.add("active");   // Step 2: Add 'active' to clicked
  });
});

function removeActiveClasses() {
  panels.forEach((panel) => {
    panel.classList.remove("active");
  });
}
```

---

## ‚úÖ Summary of Concepts Learned

| Concept               | Description                                    |
| --------------------- | ---------------------------------------------- |
| **HTML Structure**    | Divs with background images and headings       |
| **CSS Flexbox**       | Used for layout and responsive resizing        |
| **Transitions**       | Smooth animation when changing panel size      |
| **DOM Manipulation**  | Add/remove classes dynamically with JavaScript |
| **Event Handling**    | Click events to trigger changes                |
| **Responsive Design** | Media queries to adapt layout on mobile        |

---

## üì∏ Final Output

* A stylish, interactive image gallery
* Clicking on a panel expands it smoothly and reveals a title
* Great for image sliders, portfolios, or feature sections
